- name: Init beacon data dirs for nodes
  hosts: beacon, all
  gather_facts: true
  serial: 20
  become: true
  tasks:
    - name: Creates beacon dir
      file:
        path: "{{beacon_node_dir}}"
        state: directory
        owner: "{{ bootstrap_user }}"
        group: "{{ bootstrap_user }}"
- name: Init validator data dirs for nodes
  hosts: validator, all
  gather_facts: false
  serial: 20
  become: true
  tasks:
    - name: Creates validator dir
      file:
        path: "{{validator_node_dir}}"
        state: directory
        owner: "{{ bootstrap_user }}"
        group: "{{ bootstrap_user }}"
- name: Init eth1 data dirs for nodes
  hosts: execution, all
  gather_facts: false
  serial: 20
  become: true
  tasks:
    - name: Creates eth1 dir
      file:
        path: "{{execution_node_dir}}"
        state: directory
        owner: "{{ bootstrap_user }}"
        group: "{{ bootstrap_user }}"
- name: Init testnet data dirs for nodes
  hosts: [beacon, execution, validator]
  gather_facts: false
  serial: 20
  become: true
  tasks:
    - name: Creates testnet dir
      file:
        path: "{{testnet_dir}}"
        state: directory
        owner: "{{ bootstrap_user }}"
        group: "{{ bootstrap_user }}"

- name: Init JWT secret
  hosts: [beacon, execution]
  gather_facts: false
  tasks:
    - name: Stat JWT path
      register: jwt_path_stat
      stat:
        path: "{{ home_dir }}/jwtsecret"
    - name: Creates JWT secret
      when: not jwt_path_stat.stat.exists
      shell: echo -n 0x$(openssl rand -hex 32 | tr -d "\n") > "{{ home_dir }}/jwtsecret"
