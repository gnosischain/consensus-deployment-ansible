##############################################
# generic ansible config information
##############################################
ansible_user: "devops"
bootstrap_user: "devops"
initial_remote_user: "root"

# Gnosis: dapplion, alebanzas
# Gnosis devops: giacomolicari, riccardo-gnosis, davidalbela, gMonty030, Stavfilipps
# POA: igorbarinov
# Gateway: mandrigin, sibuser
github_user_pubkeys:
  - dapplion
  - giacomolicari
  - alebanzas
  - igorbarinov
  - parithosh
  - mandrigin
  - sibuser
  - riccardo-gnosis
  - davidalbela
  - gMonty030
  - Stavfilipps

ansible_python_interpreter: /usr/bin/python3
oh_my_zsh_config:
  PROMPT: "%{$fg[yellow]%}%n%{$fg[white]%}@%{$fg[red]%}%m%{$reset_color%} ${PROMPT}"

##############################################
# eth1 endpoints
##############################################
# nimbus requires a websocket endpoint (http support unstable)
# note: also used for execution engine endpoint in nimbus
consensus_endpoint_nimbus: ws://127.0.0.1:8551

eth1endpoint: http://127.0.0.1:8545

beacon_api_endpoint: "http://127.0.0.1:{{beacon_api_port}}"

# Merge Engine endpoints
# TODO change IP?
# TODO: some engines might start using the 8550 port (or 8551 for ws)

##############################################
# testnet specific information
##############################################
testnet_type: custom
eth2_network_name: denver
chainID: 100101

# To allow using the deposit contract
eth2_genesis_eth1data_blockhash: "0x203e164cf3b6f6765abf2f0355a4d09e5eaf6a777243bc4407b569431cd95cb3"

# 0xfffffffffffffffffffffffffffffffe difficulty / block
# 735009912549227081080889152052619336740640 = 2160 blocks = 10800 seconds = 3 hours
terminal_total_difficulty: "115792089237316195423570985008687907853269984665640564039457584007913129639935"
fee_recipient: "0x88dFc82CF71fdeb23f82C33a202f6E2D19AC0541"
# enter bootnodes here if needed
bootnode_enrs:
  [
    "enr:-L24QEN9xx93gaRbIhJXDjdCBF-ZcTbCQhDopc_8f23CnRQoH68VJMV61hkC-uanfFSVLhvGHe7X2uzqrYZ-wAVDwpWB0YdhdHRuZXRziP__________hGV0aDKQAZfIiAIAAG___________4JpZIJ2NIJpcIRA4yf4iXNlY3AyNTZrMaECElxPW-cqCv1OtnZxE1FwaJR-rHUqciCbb2soyQFhtiCIc3luY25ldHMPg3RjcIIjKIN1ZHCCIyg",
    "enr:-Ly4QDQRiK5erOBDZ5mo0zUrGx4yOSF4h6TWtk0gvMVa0x4MGIVJc1kE6NAdlvQgUdbAp0JMDpyihv4nM6yKu1bkccoBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpB8M18EAQAAb1oAAAAAAAAAgmlkgnY0gmlwhIm4k0iJc2VjcDI1NmsxoQL6f6tNRuTXyETiaqbuA2D8It9J1L0KNR0kcd2fJBd2pohzeW5jbmV0cwCDdGNwgiMog3VkcIIjKA",
    "enr:-Ly4QLJgqx0sIBdCcqU4nBV70-IoY3sIiqZqgy5FC19G-ezGJ044FQ4mk0L458u-ukGXOVTlgSGFoYsG8PSq3TqnQ1MBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpB8M18EAQAAb1oAAAAAAAAAgmlkgnY0gmlwhJ_fxNCJc2VjcDI1NmsxoQP8p1DRfSSvY8ZaA5UPchybrEn3cnEtbfdLsH3U13o1UYhzeW5jbmV0cwCDdGNwgiMog3VkcIIjKA",
    "enr:-Ly4QPVyaTqZWz3g6Q2qIL2fTSgI4RtUUBNmKkC6qkMYvGOIQAsLQmjHPl2RZxCokJu0TZpcx5PbIRzVHrbNUTlXwfQBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpB8M18EAQAAb1oAAAAAAAAAgmlkgnY0gmlwhJO29CuJc2VjcDI1NmsxoQPw3BeveRoKc02bC13rB-dBLVMrHuhF8aBqemaeU77sqYhzeW5jbmV0cwCDdGNwgiMog3VkcIIjKA",
    "enr:-Ly4QJHpsMQfB8x2MwMqsp8iCewZOSuFJlRUWRhwkCffpPDIAwSIdevnUWuXFAoB4WxLvVtJcIRilpJ_g5aRpuR9KksBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpB8M18EAQAAb1oAAAAAAAAAgmlkgnY0gmlwhJ_fAqeJc2VjcDI1NmsxoQJn7LqtCK9UZMg7B03VFj4vI_afMILRP8y1JJIofOeNnohzeW5jbmV0cwCDdGNwgiMog3VkcIIjKA",
    "enr:-Ly4QLB-l2WL_pFcMq_J8lC5HfFCo5X58ToLB34ItLxGl_NrOD4z-1KqSAoylod6VNDdc5xSm50lb0g_bUbM0yW7Ik4Bh2F0dG5ldHOIAAAAAAAAAACEZXRoMpB8M18EAQAAb1oAAAAAAAAAgmlkgnY0gmlwhJ3mLruJc2VjcDI1NmsxoQOtHCQFJFMTusPouJZQGVRnO5Gfa0n8OJj0_VBP7jDIzIhzeW5jbmV0cwCDdGNwgiMog3VkcIIjKA",
    "enr:-Ly4QHyiC-sGcx69qrjh-N_RjRjPgvB5BuWMyHvaMG7wcWIlMPqZ2xSu4y1dUiDhS0loA0ZRrJeGtRMqUE3zWdbtmBYBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpB8M18EAQAAb1oAAAAAAAAAgmlkgnY0gmlwhIs7BSuJc2VjcDI1NmsxoQMIxomNJtKZ-i3qu3ESec2-pffeB9GpzSYwMqMikDBhSohzeW5jbmV0cwCDdGNwgiMog3VkcIIjKA",
    "enr:-Ly4QCjqDWxKlEcVpTzVN2PAa2bHZEe-EX1Ug5IdDz6F5A9JTm8iVl1cQ44lN_NFSV8eVCCo7nhSyF8qkZqlAFPXexYBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpB8M18EAQAAb1oAAAAAAAAAgmlkgnY0gmlwhKRcgoyJc2VjcDI1NmsxoQIoyzLtTA84-M8pQv8HuXwDyJn1L2ucRSqqvcczCH1-dYhzeW5jbmV0cwCDdGNwgiMog3VkcIIjKA",
    "enr:-MK4QC4E4jjCwdlQyLjcSJvSCfTG-awIKH7m21zUYMyxfIHQdf6OueEVHQoqyb844bgfI5iuxHpHwaac5foHT-nF0RGGAYJfRLBQh2F0dG5ldHOIAAAAAAAAAACEZXRoMpB8M18EAQAAb1oAAAAAAAAAgmlkgnY0gmlwhI_GhrCJc2VjcDI1NmsxoQKbol-HpVZIjaCxZVckBKwKQog8ZbIQtBLrv8UNUUL4eohzeW5jbmV0cwCDdGNwgiMog3VkcIIjKA==",
    "enr:-MK4QCBAnNWYbmhMLjT5JXwG7yn8waVEKcuTyj4goLfqT0ZeP05zH-SvK9bM9mjDmO1LeK5QawHWbA2vfmhx4c4UE1iGAYJfRLBvh2F0dG5ldHOIAAAAAAAAAACEZXRoMpB8M18EAQAAb1oAAAAAAAAAgmlkgnY0gmlwhI_GhlqJc2VjcDI1NmsxoQPZQrKshbN3IttVDjDu6cBNURJ-jfvBscGv6jbZcdFnW4hzeW5jbmV0cwCDdGNwgiMog3VkcIIjKA==",
    "enr:-MK4QPOu9asn5zUfw3N1hXJPswqkjijy43NEGEpYdSlnZ-uqJzbBWuoZUgNg-ZsTBosKhiN5GYhcIN8omZbfnvrRaj2GAYJfRLuPh2F0dG5ldHOIAAAAAAAAAACEZXRoMpB8M18EAQAAb1oAAAAAAAAAgmlkgnY0gmlwhI_Gis6Jc2VjcDI1NmsxoQJVibpBoU_pfNO9YCuPHtaPWCVHrKJ9zOqIsXo-jtVhH4hzeW5jbmV0cwCDdGNwgiMog3VkcIIjKA==",
    "enr:-MK4QKIz-EU-37Gk32HsNTU4_LQjdhALKP2igMmK2erFYxMHcNKImOIeKrxpiDevD2Xzb5sJ1LqB-Q7lkp-nqFSBw8yGAYJfRLw_h2F0dG5ldHOIAAAAAAAAAACEZXRoMpB8M18EAQAAb1oAAAAAAAAAgmlkgnY0gmlwhI_GQmiJc2VjcDI1NmsxoQOq2J4lMISpDOo4zXfgXbAel2zeikg-orm6Fjv0DMn8Y4hzeW5jbmV0cwCDdGNwgiMog3VkcIIjKA==",
    "enr:-MK4QNP_k-NywWFoA6BSNt6gW4_TRU29xF8CP8b9VjNfTjfVLcnbp2yk7wrlmPw71IWwP1zTBQ_mwmcHi8e9sZri31SGAYJfRMFgh2F0dG5ldHOIAAAAAAAAAACEZXRoMpB8M18EAQAAb1oAAAAAAAAAgmlkgnY0gmlwhI_GTJOJc2VjcDI1NmsxoQLf_wv8goOTWUCSXFBoUd6LsYF89EWTr7cWFxz31qnlKYhzeW5jbmV0cwCDdGNwgiMog3VkcIIjKA==",
  ]

eth1_bootnode_enode: [
    "enode://7b30043c78ece57519bbcbe0bf88f1029ce4b3df421bd85e7e578027d7867b3d4815d200a365d18e401a299908e75a91043e2542f69de89931dec25050c5e13f@64.227.39.248:30303",
    "enode://bd2416803d57271b6e64a31f2b41d0f7f7e6f1446cb163d6f5d99aa2191aa13c1037856a7762e2884d1b15185b82f0d63a4afa9c72adb62ba1005e1df26a784f@137.184.147.72:30303",
    "enode://00bf9b88c38e58f153d5912583159bed81cdb38a950e74b242f60e7d31ceb12fede0f8b0d65c2c2f0ccfc69f7f3e793253e8f9d45e9bf5b58625feab09e2c1bf@137.184.196.49:30303",
    "enode://9053f05e983578605cda9155da31359e59a3598c93fd27d5fa003950407b08a42dfcfbc8b0f7334c1fac9dfb1bebba080157b1209d6b53724e6f7c86bf7305ce@159.223.196.208:30303",
    # From Igor Mandrigin
    "enode://d9e4d4eaa444a00bce741ba45e0e0b6d5962c761eda69075c3043759b56bd85807f65c032237536d2179f87de073439ff5ae39daa776126deccf1db0e63e5380@31.171.250.111:30303",
    "enode://8efca03801f9682a3fcaec439de484bf98aa565b253040e456b33270eb2771f30d36c6ad3f0b1a8f3ab09b305fe7c96476cfc5adb074bc0b3b8aeb661478bc74@31.171.241.23:30303",
    "enode://9515e7a0c7ca71893fff404d8804bae058e048cd7851c864c6889801da1a68c9ff5361f1cc65a57cedf3260ff585c7363a82764db2cb233f4969e7f4179ec43b@31.171.241.254:30303",
    "enode://be7cc64b069d56301ea6b3c9dc4ef535bad207b6d8dcdf44d15207571867543effaebfc248320f971f6a7511e480367620415e82050b545219fbfa46f5177400@31.171.240.33:30303",
    "enode://95c68c2018888a2e050489d52ba0fceb4140aa302f4f1baefae178b9001e7eb71a83e57f2701a204a438d4f6837e1dc7708c74c485d4788e303ea30e94bfcd06@31.171.240.175:30303",
  ]

mining_addresses:
  - "0xaaa0611623f27b169557d178da5d9cd3e1044ce1"
  - "0xaaa939c83aa32af422ba0da4a44888c04af65325"
  - "0xaaa5807408ad28bdbceb2911a6eb9541e880505d"
  - "0xaaa79fbce01f2ad7cc8424e7a8361bdec0c662c8"
  - "0xaaa6946c6ec277335cb3ef93bc140489c1b412b4"
  - "0xaaa732a914b4780e33bcac7f129120a6ceb7ea0e"
  - "0xaaa0edbec2091470d5a8d8876bf5cf681b0d6468"
  - "0xaaad85d426c0efeb2ee215d6dd4c6ccc39bb9106"
  - "0xaaaafb931bf8ebe4af36dca978b94c0efbd300d6"
  - "0xaaa49c8aeca0afd329012522563b28c75d687ac2"

keystores_password: "{{denver_keystores_password}}"

# Genesis. denver_mnemonics is stored in `denver/inventory/group_vars/secrets.yaml`
genesis_mnemonics: "{{denver_mnemonics}}"
mnemonic_0: "{{denver_mnemonics[0].mnemonic}}"
mnemonic_1: "{{denver_mnemonics[1].mnemonic}}"
mnemonic_2: "{{denver_mnemonics[2].mnemonic}}"
mnemonic_3: "{{denver_mnemonics[3].mnemonic}}"
mnemonic_4: "{{denver_mnemonics[4].mnemonic}}"
mnemonic_5: "{{denver_mnemonics[5].mnemonic}}"
mnemonic_6: "{{denver_mnemonics[6].mnemonic}}"
mnemonic_7: "{{denver_mnemonics[7].mnemonic}}"
mnemonic_8: "{{denver_mnemonics[8].mnemonic}}"
mnemonic_9: "{{denver_mnemonics[9].mnemonic}}"
mnemonic_10: "{{denver_mnemonics[10].mnemonic}}"
mnemonic_11: "{{denver_mnemonics[11].mnemonic}}"

# Note: 0 is correct, but due to an underflow bug (being fixed), doesn't work.
eth1_deposit_contract_first_block: 1
# Block from which to start indexing. Set to a higher value for shadow-forks
explorer_execution_first_block: 1

##############################################
# metric information
##############################################
# enter pushgateway config if needed
prometheus_config_file: "prometheus/prometheus.yml.j2"

prometheus_remote_write_configs:
  # NOTE: For some reason DO hosts can't resolve themerge-monitoring.gnosischainscan.com domain
  - url: https://themerge-monitoring.gnosischainscan.com/prometheus/api/v1/write/
    username: themergeprometheusremotewrite
    password: "{{themergemonitoring_remote_write_password}}"
  - url: https://hostedmetrics.com/s/cQ4UMmFc/prometheus/remote/write/
    username: cQ4UMmFc
    password: "{{hostedmetrics_remote_write_password}}"

prometheus_enabled: true
remote_write_auth: true
cadvisor_enabled: true
promtail_enabled: true
promtail_loki_server_url: "https://136217:{{loki_pusher_api_key}}@logs-prod-us-central1.grafana.net/loki/api/v1/push"
eth2_validator_metrics_enabled: true
eth_metrics_exporter_enabled: true
eth_metrics_exporter_name: "metrics-exporter"
eth_metrics_exporter_image: samcm/ethereum-metrics-exporter:0.11.0

no_validator_keys: false
ethstats_host: "64.227.39.248:3000"
ethstats_nethermind_enabled: true
ethstats_besu_enabled: false
ethstats_erigon_enabled: false
ethstats_geth_enabled: false

# Skip "propagate official prometheus and promtool binaries" step.
# It freezes forever and when it works it's extremely slow.
# Binaries are downloaded from Github to the ansible controller host, them uploaded from there.
prometheus_skip_install: true
prometheus_binary_url: https://d1zrfxp177ra46.cloudfront.net/prometheus-2.37.0.linux-amd64
# https://d1zrfxp177ra46.cloudfront.net/prometheus-2.37.0.linux-amd64/prometheus
# https://d1zrfxp177ra46.cloudfront.net/prometheus-2.37.0.linux-amd64/promtool
# ^ hosted by Gnosis, deployed by Riccardo

##############################################
# ports to configure
##############################################
eth1_rpc_port: 8545
eth1_ws_rpc_port: 8546
eth1_engine_port_no_auth: 8550
eth1_engine_port: 8551
eth1_engine_snoop_port: 8560
eth1_engine_ws_port: 8552
nimbus_rpc_port: 4009
beacon_api_port: 4000
beacon_grpc_port: 4001
beacon_metrics_port: 8000
beacon_p2p_port: 9000
validator_metrics_port: 8001
validator_rpc_port: 4002
node_exporter_web_listen_address: "0.0.0.0:9100"
prometheus_web_listen_address: "0.0.0.0:9090"
eth1_metrics_port: 8002
eth_metrics_exporter_port: 8003
cadvisor_port: 9280
promtail_port: 9080
explorer_execution_public_port: 3334
explorer_beacon_public_port: 3333
public_ethstats: 3000

##############################################
# Command for JSON RPC snooper
##############################################
snoop_image_name: parithoshj/json_rpc_snoop:v1.0.0-x86
snoop_container_name: snooper

##############################################
# name of the validator to display
##############################################
graffiti: "{{eth2_client_name}}-{{eth1_client_name}}"

##############################################
# local data directories
##############################################
local_explorerdata_host_dir: "{{inventory_dir}}/../explorerdata"
local_explorerdata_host_archive: "{{inventory_dir}}/../explorerdata.tar.gz"
local_forkmondata_host_dir: "{{inventory_dir}}/../forkmondata"
local_forkmondata_host_archive: "{{inventory_dir}}/../forkmondata.tar.gz"
local_custom_config_data_host_dir: "{{inventory_dir}}/../custom_config_data"
local_custom_config_data_host_archive: "{{inventory_dir}}/../custom_config_data.tar.gz"
local_eth2_config_filepath: "{{local_custom_config_data_host_dir}}/config.yaml"
local_eth1_genesis_filepath: "{{local_custom_config_data_host_dir}}/nethermind_genesis.json"
local_mnemonics_filepath: "{{local_custom_config_data_host_dir}}/mnemonics.yaml"
# private dirs
# Validator assignments
local_validator_host_dir: "{{inventory_dir}}/../validator_prep/{{inventory_hostname}}"
local_validator_host_archive: "{{inventory_dir}}/../validator_prep/{{inventory_hostname}}.tar.gz"

##############################################
# remote host data directories
##############################################
home_dir: "/home/{{ansible_user}}"
beacon_node_dir: "{{home_dir}}/beacon"
validator_node_dir: "{{home_dir}}/validator"
testnet_dir: "{{home_dir}}/custom_config_data"
execution_node_dir: "{{home_dir}}/eth1data"
keystore_password_filename: "keystores_password.txt"

##############################################
# common log config
##############################################
beacon_log_level: info
common_log_options:
  max-file: "10"
  max-size: 500m
  mode: non-blocking
  max-buffer-size: 4m
common_log_driver: json-file

##############################################
# container names
##############################################
beacon_container_name: beacon
validator_container_name: validator
execution_container_name: execution
hi_peer_count: 100
separate_validator_process_enabled: true

firewall_allowed_tcp_ports:
  - 22
  - 30303
  - 9000
  - 80
  - 443
  - 8080
  - 8545
  - "{{explorer_execution_port}}"
  - "{{explorer_beacon_public_port}}"
  - "{{public_ethstats}}"

firewall_allowed_udp_ports:
  - 30303
  - 9000
